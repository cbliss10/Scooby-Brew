{"ast":null,"code":"import { BrewController } from \"../models/controller.model\";\n\nconst testFunction = data => {\n  console.log(data);\n};\n\nfunction createWebsocketMethods(socket) {\n  function listControllers() {\n    console.log(\"requesting list ...\");\n    socket.emit(\"controller:list\", res => {\n      console.log(res);\n    });\n  }\n\n  function createController() {\n    console.log(\"testing create controller ...\");\n    var newController = new BrewController();\n    newController.name = \"testing\";\n    const {\n      id,\n      ...send\n    } = newController;\n    socket.emit(\"controller:create\", send, res => {\n      console.log(res);\n    });\n  }\n\n  return [listControllers, createController];\n}\n\nexport { testFunction, createWebsocketMethods };","map":{"version":3,"sources":["C:/Users/cblis/OneDrive/Documents/Projects/SBFE4/client/src/websocket/controllerFunctions.ts"],"names":["BrewController","testFunction","data","console","log","createWebsocketMethods","socket","listControllers","emit","res","createController","newController","name","id","send"],"mappings":"AAKA,SAASA,cAAT,QAA+B,4BAA/B;;AAEA,MAAMC,YAAY,GAAIC,IAAD,IAAkB;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,CAFD;;AAIA,SAASG,sBAAT,CACEC,MADF,EAEE;AACA,WAASC,eAAT,GAA2B;AACzBJ,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAE,IAAAA,MAAM,CAACE,IAAP,CAAY,iBAAZ,EAAgCC,GAAD,IAAS;AACtCN,MAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACD,KAFD;AAGD;;AAED,WAASC,gBAAT,GAA4B;AAC1BP,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACA,QAAIO,aAAa,GAAG,IAAIX,cAAJ,EAApB;AACAW,IAAAA,aAAa,CAACC,IAAd,GAAqB,SAArB;AACA,UAAM;AAAEC,MAAAA,EAAF;AAAM,SAAGC;AAAT,QAAkBH,aAAxB;AACAL,IAAAA,MAAM,CAACE,IAAP,CAAY,mBAAZ,EAAiCM,IAAjC,EAAwCL,GAAD,IAAS;AAC9CN,MAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACD,KAFD;AAGD;;AAED,SAAO,CAACF,eAAD,EAAkBG,gBAAlB,CAAP;AACD;;AAED,SAAST,YAAT,EAAuBI,sBAAvB","sourcesContent":["import { Socket } from \"socket.io-client\";\r\nimport {\r\n  ClientToServerEvents,\r\n  ServerToClientEvents,\r\n} from \"../../../server/lib/events\";\r\nimport { BrewController } from \"../models/controller.model\";\r\n\r\nconst testFunction = (data: string) => {\r\n  console.log(data);\r\n};\r\n\r\nfunction createWebsocketMethods(\r\n  socket: Socket<ServerToClientEvents, ClientToServerEvents>\r\n) {\r\n  function listControllers() {\r\n    console.log(\"requesting list ...\");\r\n    socket.emit(\"controller:list\", (res) => {\r\n      console.log(res);\r\n    });\r\n  }\r\n\r\n  function createController() {\r\n    console.log(\"testing create controller ...\");\r\n    var newController = new BrewController();\r\n    newController.name = \"testing\";\r\n    const { id, ...send } = newController;\r\n    socket.emit(\"controller:create\", send, (res) => {\r\n      console.log(res);\r\n    });\r\n  }\r\n\r\n  return [listControllers, createController];\r\n}\r\n\r\nexport { testFunction, createWebsocketMethods };\r\n"]},"metadata":{},"sourceType":"module"}
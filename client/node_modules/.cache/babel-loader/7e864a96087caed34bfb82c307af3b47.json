{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cblis\\\\OneDrive\\\\Documents\\\\Projects\\\\SBFE4\\\\client\\\\src\\\\components\\\\configure\\\\ControllerModal.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialController = {\n  id: \"noid\",\n  name: \"New controller\",\n  sensorAddress: \"NA\",\n  heaterPin: -1,\n  description: \"\"\n};\nexport function ControllerModal(_ref) {\n  _s();\n\n  let {\n    controller,\n    socket,\n    show\n  } = _ref;\n  const [status, setStatus] = useState(\"new\");\n  const [saveController, setSaveController] = useState(initialController);\n  const [isOpen, setIsOpen] = useState(false);\n  useEffect(() => {\n    if (controller) {\n      setStatus(\"edit\");\n      setSaveController(controller);\n    } else {\n      setStatus(\"new\");\n      setSaveController({ ...initialController\n      });\n    }\n  }, []); // useEffect(() => {\n  //   console.log(\"setting modal open\");\n  //   setIsOpen(show);\n  // }, [show]);\n\n  const handleSubmit = () => {\n    // process saveController\n    if (socket === undefined) {\n      console.error(\"Cannot emit save event: Socket not defined\");\n      return;\n    }\n\n    if (status === \"new\") {\n      const newController = {\n        name: saveController.name,\n        description: saveController.description,\n        heaterPin: saveController.heaterPin,\n        sensorAddress: saveController.sensorAddress\n      };\n      socket.emit(\"controller:add\", newController, res => {\n        console.log(res);\n      });\n    }\n  };\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  function openModel() {\n    setIsOpen(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex justify-content-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary m-2\",\n      \"data-bs-toggle\": \"modal\",\n      \"data-bs-target\": \"#exampleModal\",\n      children: \"Add New Controller\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleShow,\n      children: \"Add New Controller\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: isOpen,\n      onHide: closeModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Modal heading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: \"Woohoo, you're reading this text in a modal!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: closeModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: closeModal,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ControllerModal, \"8sJMALm8pP8UffQvRNNpFa3Zrog=\");\n\n_c = ControllerModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ControllerModal\");","map":{"version":3,"sources":["C:/Users/cblis/OneDrive/Documents/Projects/SBFE4/client/src/components/configure/ControllerModal.tsx"],"names":["useEffect","useState","Modal","Button","initialController","id","name","sensorAddress","heaterPin","description","ControllerModal","controller","socket","show","status","setStatus","saveController","setSaveController","isOpen","setIsOpen","handleSubmit","undefined","console","error","newController","emit","res","log","closeModal","openModel","handleShow"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Socket } from \"socket.io-client\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport {\r\n  ClientToServerEvents,\r\n  ServerToClientEvents,\r\n} from \"../../../../server/lib/events\";\r\nimport { BrewController } from \"../../../../server/lib/models/controllerModels\";\r\n\r\ninterface Props {\r\n  controller?: BrewController;\r\n  socket?: Socket<ServerToClientEvents, ClientToServerEvents>;\r\n  show: boolean;\r\n}\r\n\r\nconst initialController: BrewController = {\r\n  id: \"noid\",\r\n  name: \"New controller\",\r\n  sensorAddress: \"NA\",\r\n  heaterPin: -1,\r\n  description: \"\",\r\n};\r\n\r\nexport function ControllerModal({ controller, socket, show }: Props) {\r\n  const [status, setStatus] = useState<\"new\" | \"edit\">(\"new\");\r\n  const [saveController, setSaveController] =\r\n    useState<BrewController>(initialController);\r\n  const [isOpen, setIsOpen] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (controller) {\r\n      setStatus(\"edit\");\r\n      setSaveController(controller);\r\n    } else {\r\n      setStatus(\"new\");\r\n      setSaveController({ ...initialController });\r\n    }\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"setting modal open\");\r\n  //   setIsOpen(show);\r\n  // }, [show]);\r\n\r\n  const handleSubmit = () => {\r\n    // process saveController\r\n    if (socket === undefined) {\r\n      console.error(\"Cannot emit save event: Socket not defined\");\r\n      return;\r\n    }\r\n    if (status === \"new\") {\r\n      const newController: Omit<BrewController, \"id\"> = {\r\n        name: saveController.name,\r\n        description: saveController.description,\r\n        heaterPin: saveController.heaterPin,\r\n        sensorAddress: saveController.sensorAddress,\r\n      };\r\n      socket.emit(\"controller:add\", newController, (res) => {\r\n        console.log(res);\r\n      });\r\n    }\r\n  };\r\n\r\n  function closeModal() {\r\n    setIsOpen(false);\r\n  }\r\n\r\n  function openModel() {\r\n    setIsOpen(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-center\">\r\n      {/* <!-- Button trigger modal --> */}\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-primary m-2\"\r\n        data-bs-toggle=\"modal\"\r\n        data-bs-target=\"#exampleModal\"\r\n      >\r\n        Add New Controller\r\n      </button>\r\n      <Button variant=\"primary\" onClick={handleShow}>\r\n        Add New Controller\r\n      </Button>\r\n      <Modal show={isOpen} onHide={closeModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={closeModal}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={closeModal}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* <Modal show={isOpen} onHide={closeModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            {status === \"edit\" ? \"Edit Controller\" : \"Add New Controller\"}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <form id=\"add-edit-controller-form\" onSubmit={handleSubmit}>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                value={saveController.name}\r\n                onChange={(e) =>\r\n                  setSaveController({\r\n                    ...saveController,\r\n                    name: e.target.value,\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Description</label>\r\n              <input\r\n                type=\"text\"\r\n                value={saveController.description}\r\n                onChange={(e) =>\r\n                  setSaveController({\r\n                    ...saveController,\r\n                    description: e.target.value,\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Sensor Address</label>\r\n              <input\r\n                type=\"text\"\r\n                value={saveController.sensorAddress}\r\n                onChange={(e) =>\r\n                  setSaveController({\r\n                    ...saveController,\r\n                    sensorAddress: e.target.value,\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Heater Pin</label>\r\n              <input\r\n                type=\"text\"\r\n                value={saveController.heaterPin}\r\n                onChange={(e) =>\r\n                  setSaveController({\r\n                    ...saveController,\r\n                    heaterPin: -1,\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n          </form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={closeModal}>\r\n            Close\r\n          </Button>\r\n          <button\r\n            type=\"submit\"\r\n            form=\"add-edit-controller-form\"\r\n            className=\"btn btn-primary\"\r\n          >\r\n            Save changes\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal> */}\r\n\r\n      {/* <!-- Modal --> */}\r\n      {/* <div\r\n        className=\"modal fade\"\r\n        id=\"exampleModal\"\r\n        tabIndex={-1}\r\n        aria-labelledby=\"exampleModalLabel\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                {status === \"edit\" ? \"Edit Controller\" : \"Add New Controller\"}\r\n              </h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <form id=\"add-edit-controller-form\" onSubmit={handleSubmit}>\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={saveController.name}\r\n                    onChange={(e) =>\r\n                      setSaveController({\r\n                        ...saveController,\r\n                        name: e.target.value,\r\n                      })\r\n                    }\r\n                  />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Description</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={saveController.description}\r\n                    onChange={(e) =>\r\n                      setSaveController({\r\n                        ...saveController,\r\n                        description: e.target.value,\r\n                      })\r\n                    }\r\n                  />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Sensor Address</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={saveController.sensorAddress}\r\n                    onChange={(e) =>\r\n                      setSaveController({\r\n                        ...saveController,\r\n                        sensorAddress: e.target.value,\r\n                      })\r\n                    }\r\n                  />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Heater Pin</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={saveController.heaterPin}\r\n                    onChange={(e) =>\r\n                      setSaveController({\r\n                        ...saveController,\r\n                        heaterPin: -1,\r\n                      })\r\n                    }\r\n                  />\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                data-bs-dismiss=\"modal\"\r\n              >\r\n                Close\r\n              </button>\r\n              <button\r\n                type=\"submit\"\r\n                form=\"add-edit-controller-form\"\r\n                className=\"btn btn-primary\"\r\n              >\r\n                Save changes\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
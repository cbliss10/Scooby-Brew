{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cblis\\\\OneDrive\\\\Documents\\\\Projects\\\\SBFE4\\\\client\\\\src\\\\components\\\\brew\\\\BrewPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { BreweryPanels } from \"./BreweryPanels\";\nimport { useContext, useEffect, useState } from \"react\";\nimport Spinner from \"../common/Spinner\";\nimport { WebSocketContext } from \"../../context/WebsocketContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const BrewPage = () => {\n  _s();\n\n  const [brewControllers, setBrewControllers] = useState(undefined);\n  const {\n    socket,\n    status\n  } = useContext(WebSocketContext);\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    getControllers();\n    return function cleanup() {};\n  }, [status]);\n\n  function getControllers() {\n    if (socket !== undefined && status === \"Connected\") {\n      setIsLoaded(false);\n      socket.emit(\"brew:start\", res => {\n        console.log(\"got response\");\n\n        if (res !== undefined) {\n          if (\"error\" in res) {\n            console.log(res.error);\n          } else {\n            setBrewControllers(res.data);\n            setIsLoaded(true);\n          }\n        } else console.log(\"res is undefined\");\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Brew!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center\",\n      children: isLoaded && brewControllers !== undefined ? /*#__PURE__*/_jsxDEV(BreweryPanels, {\n        brewControllers: brewControllers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Loading ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(BrewPage, \"OhRNikmiOYVkDMK8bqL4zkYzbcg=\");\n\n_c = BrewPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BrewPage\");","map":{"version":3,"sources":["C:/Users/cblis/OneDrive/Documents/Projects/SBFE4/client/src/components/brew/BrewPage.tsx"],"names":["BreweryPanels","useContext","useEffect","useState","Spinner","WebSocketContext","BrewPage","brewControllers","setBrewControllers","undefined","socket","status","isLoaded","setIsLoaded","getControllers","cleanup","emit","res","console","log","error","data"],"mappings":";;;AAAA,SAASA,aAAT,QAA8B,iBAA9B;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,SAASC,gBAAT,QAAiC,gCAAjC;;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCL,QAAQ,CAEpDM,SAFoD,CAAtD;AAGA,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAqBV,UAAU,CAACI,gBAAD,CAArC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAU,KAAV,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,cAAc;AACd,WAAO,SAASC,OAAT,GAAmB,CAAE,CAA5B;AACD,GAHQ,EAGN,CAACJ,MAAD,CAHM,CAAT;;AAKA,WAASG,cAAT,GAA0B;AACxB,QAAIJ,MAAM,KAAKD,SAAX,IAAwBE,MAAM,KAAK,WAAvC,EAAoD;AAClDE,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAH,MAAAA,MAAM,CAACM,IAAP,CAAY,YAAZ,EAA2BC,GAAD,IAAS;AACjCC,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AACA,YAAIF,GAAG,KAAKR,SAAZ,EAAuB;AACrB,cAAI,WAAWQ,GAAf,EAAoB;AAClBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,KAAhB;AACD,WAFD,MAEO;AACLZ,YAAAA,kBAAkB,CAACS,GAAG,CAACI,IAAL,CAAlB;AACAR,YAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACF,SAPD,MAOOK,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACR,OAVD;AAWD;AACF;;AAED,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA,gBACGP,QAAQ,IAAIL,eAAe,KAAKE,SAAhC,gBACC,QAAC,aAAD;AAAe,QAAA,eAAe,EAAEF;AAAhC;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC;AAAA,gCACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAgBD,CA7CM;;GAAMD,Q;;KAAAA,Q","sourcesContent":["import { BreweryPanels } from \"./BreweryPanels\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport Spinner from \"../common/Spinner\";\r\nimport { BrewController } from \"../../../../server/lib/models/controllerModels\";\r\nimport { WebSocketContext } from \"../../context/WebsocketContext\";\r\n\r\nexport const BrewPage = () => {\r\n  const [brewControllers, setBrewControllers] = useState<\r\n    BrewController[] | undefined\r\n  >(undefined);\r\n  const { socket, status } = useContext(WebSocketContext);\r\n  const [isLoaded, setIsLoaded] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    getControllers();\r\n    return function cleanup() {};\r\n  }, [status]);\r\n\r\n  function getControllers() {\r\n    if (socket !== undefined && status === \"Connected\") {\r\n      setIsLoaded(false);\r\n      socket.emit(\"brew:start\", (res) => {\r\n        console.log(\"got response\");\r\n        if (res !== undefined) {\r\n          if (\"error\" in res) {\r\n            console.log(res.error);\r\n          } else {\r\n            setBrewControllers(res.data);\r\n            setIsLoaded(true);\r\n          }\r\n        } else console.log(\"res is undefined\");\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"text-center\">Brew!</h1>\r\n      {/* <BrewerySwitchBar breweryStatus={brewerySettings.status} /> */}\r\n      <div className=\"d-flex justify-content-center\">\r\n        {isLoaded && brewControllers !== undefined ? (\r\n          <BreweryPanels brewControllers={brewControllers} />\r\n        ) : (\r\n          <div>\r\n            <Spinner />\r\n            <h2>Loading ...</h2>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
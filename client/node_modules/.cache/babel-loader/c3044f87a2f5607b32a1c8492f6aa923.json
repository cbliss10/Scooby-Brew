{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cblis\\\\OneDrive\\\\Documents\\\\Projects\\\\SBFE4\\\\client\\\\src\\\\components\\\\brew\\\\BrewPanel.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { WebSocketContext } from \"../../context/websocketContext\";\nimport { PowerLevelComponent } from \"./HeatControl\";\nimport { TemperatureDisplay } from \"./TempDisplay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// const initialState = new BrewControllerState();\nexport function BrewPanel(props) {\n  _s();\n\n  const {\n    controller\n  } = props;\n  const units = \"F\";\n  const {\n    socket\n  } = useContext(WebSocketContext);\n  const [controllerState, setControllerState] = useState(controller);\n  useEffect(() => {\n    const updatedController = { ...controller\n    };\n    setControllerState(updatedController);\n  }, [controller]);\n\n  const adjustPowerLevel = adjustment => {\n    const updatedController = { ...controller\n    };\n    updatedController.powerLevel += adjustment;\n    if (updatedController.powerLevel > 100) updatedController.powerLevel = 100;else if (updatedController.powerLevel < 0) updatedController.powerLevel = 0;\n\n    if (socket !== undefined) {\n      setControllerState(updatedController);\n      socket.emit(\"brew:adjust\", updatedController, res => {\n        console.log(res);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-inline-flex flex-column p-2 border \",\n    children: [/*#__PURE__*/_jsxDEV(TemperatureDisplay, {\n      temperature: controller.temperature,\n      units: units\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PowerLevelComponent, {\n      powerLevel: controller.powerLevel,\n      adjustPowerLevel: adjustPowerLevel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BrewPanel, \"L9n47J0evkzZPhTyf2hB78da1tc=\");\n\n_c = BrewPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"BrewPanel\");","map":{"version":3,"sources":["C:/Users/cblis/OneDrive/Documents/Projects/SBFE4/client/src/components/brew/BrewPanel.tsx"],"names":["useContext","useEffect","useState","WebSocketContext","PowerLevelComponent","TemperatureDisplay","BrewPanel","props","controller","units","socket","controllerState","setControllerState","updatedController","adjustPowerLevel","adjustment","powerLevel","undefined","emit","res","console","log","temperature"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AAEA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,SAASC,mBAAT,QAAoC,eAApC;AACA,SAASC,kBAAT,QAAmC,eAAnC;;AAMA;AAEA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAAiC;AAAA;;AACtC,QAAM;AAAEC,IAAAA;AAAF,MAAiBD,KAAvB;AACA,QAAME,KAAK,GAAG,GAAd;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAaV,UAAU,CAACG,gBAAD,CAA7B;AACA,QAAM,CAACQ,eAAD,EAAkBC,kBAAlB,IACJV,QAAQ,CAAsBM,UAAtB,CADV;AAGAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,iBAAiB,GAAG,EAAE,GAAGL;AAAL,KAA1B;AACAI,IAAAA,kBAAkB,CAACC,iBAAD,CAAlB;AACD,GAHQ,EAGN,CAACL,UAAD,CAHM,CAAT;;AAKA,QAAMM,gBAAgB,GAAIC,UAAD,IAAwB;AAC/C,UAAMF,iBAAiB,GAAG,EAAE,GAAGL;AAAL,KAA1B;AACAK,IAAAA,iBAAiB,CAACG,UAAlB,IAAgCD,UAAhC;AACA,QAAIF,iBAAiB,CAACG,UAAlB,GAA+B,GAAnC,EAAwCH,iBAAiB,CAACG,UAAlB,GAA+B,GAA/B,CAAxC,KACK,IAAIH,iBAAiB,CAACG,UAAlB,GAA+B,CAAnC,EAAsCH,iBAAiB,CAACG,UAAlB,GAA+B,CAA/B;;AAC3C,QAAIN,MAAM,KAAKO,SAAf,EAA0B;AACxBL,MAAAA,kBAAkB,CAACC,iBAAD,CAAlB;AACAH,MAAAA,MAAM,CAACQ,IAAP,CAAY,aAAZ,EAA2BL,iBAA3B,EAA+CM,GAAD,IAAS;AACrDC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OAFD;AAGD;AACF,GAXD;;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,uCAAf;AAAA,4BACE,QAAC,kBAAD;AAAoB,MAAA,WAAW,EAAEX,UAAU,CAACc,WAA5C;AAAyD,MAAA,KAAK,EAAEb;AAAhE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,mBAAD;AACE,MAAA,UAAU,EAAED,UAAU,CAACQ,UADzB;AAEE,MAAA,gBAAgB,EAAEF;AAFpB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAlCeR,S;;KAAAA,S","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport { BrewControllerState } from \"../../../../server/lib/models/controllerModels\";\r\nimport { WebSocketContext } from \"../../context/websocketContext\";\r\nimport { PowerLevelComponent } from \"./HeatControl\";\r\nimport { TemperatureDisplay } from \"./TempDisplay\";\r\n\r\ninterface Props {\r\n  controller: BrewControllerState;\r\n}\r\n\r\n// const initialState = new BrewControllerState();\r\n\r\nexport function BrewPanel(props: Props) {\r\n  const { controller } = props;\r\n  const units = \"F\";\r\n  const { socket } = useContext(WebSocketContext);\r\n  const [controllerState, setControllerState] =\r\n    useState<BrewControllerState>(controller);\r\n\r\n  useEffect(() => {\r\n    const updatedController = { ...controller };\r\n    setControllerState(updatedController);\r\n  }, [controller]);\r\n\r\n  const adjustPowerLevel = (adjustment: number) => {\r\n    const updatedController = { ...controller };\r\n    updatedController.powerLevel += adjustment;\r\n    if (updatedController.powerLevel > 100) updatedController.powerLevel = 100;\r\n    else if (updatedController.powerLevel < 0) updatedController.powerLevel = 0;\r\n    if (socket !== undefined) {\r\n      setControllerState(updatedController);\r\n      socket.emit(\"brew:adjust\", updatedController, (res) => {\r\n        console.log(res);\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-inline-flex flex-column p-2 border \">\r\n      <TemperatureDisplay temperature={controller.temperature} units={units} />\r\n      <PowerLevelComponent\r\n        powerLevel={controller.powerLevel}\r\n        adjustPowerLevel={adjustPowerLevel}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
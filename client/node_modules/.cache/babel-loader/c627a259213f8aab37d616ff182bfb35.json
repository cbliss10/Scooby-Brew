{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cblis\\\\OneDrive\\\\Documents\\\\Projects\\\\SBFE4\\\\client\\\\src\\\\components\\\\brew\\\\BrewPanel.tsx\";\nimport { PowerLevelComponent } from \"./HeatControl\";\nimport { TemperatureDisplay } from \"./TempDisplay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function BrewPanel(props) {\n  const {\n    controller\n  } = props;\n  const units = \"F\";\n\n  const adjustPowerLevel = adjustment => {// const controllerCopy = { ...controller };\n    // const { powerLevel } = controllerCopy;\n    // let newPowerLevel = powerLevel + adjustment;\n    // if (newPowerLevel < 1) {\n    //   newPowerLevel = 0;\n    // }\n    // if (newPowerLevel > 99) {\n    //   newPowerLevel = 100;\n    // }\n    // controllerCopy.powerLevel = newPowerLevel;\n    // // updateBrewControllerState\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-inline-flex flex-column p-2 border \",\n    children: [/*#__PURE__*/_jsxDEV(TemperatureDisplay, {\n      temperature: controller.temperature,\n      units: units\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PowerLevelComponent, {\n      powerLevel: controller.powerLevel,\n      adjustPowerLevel: adjustPowerLevel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_c = BrewPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"BrewPanel\");","map":{"version":3,"sources":["C:/Users/cblis/OneDrive/Documents/Projects/SBFE4/client/src/components/brew/BrewPanel.tsx"],"names":["PowerLevelComponent","TemperatureDisplay","BrewPanel","props","controller","units","adjustPowerLevel","adjustment","temperature","powerLevel"],"mappings":";AACA,SAASA,mBAAT,QAAoC,eAApC;AACA,SAASC,kBAAT,QAAmC,eAAnC;;AAMA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAAiC;AACtC,QAAM;AAAEC,IAAAA;AAAF,MAAiBD,KAAvB;AACA,QAAME,KAAK,GAAG,GAAd;;AAEA,QAAMC,gBAAgB,GAAIC,UAAD,IAAwB,CAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAZD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,uCAAf;AAAA,4BACE,QAAC,kBAAD;AAAoB,MAAA,WAAW,EAAEH,UAAU,CAACI,WAA5C;AAAyD,MAAA,KAAK,EAAEH;AAAhE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,mBAAD;AACE,MAAA,UAAU,EAAED,UAAU,CAACK,UADzB;AAEE,MAAA,gBAAgB,EAAEH;AAFpB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;KA3BeJ,S","sourcesContent":["import { BrewControllerState } from \"../../../../server/lib/models/controllerModels\";\r\nimport { PowerLevelComponent } from \"./HeatControl\";\r\nimport { TemperatureDisplay } from \"./TempDisplay\";\r\n\r\ninterface Props {\r\n  controller: BrewControllerState;\r\n}\r\n\r\nexport function BrewPanel(props: Props) {\r\n  const { controller } = props;\r\n  const units = \"F\";\r\n\r\n  const adjustPowerLevel = (adjustment: number) => {\r\n    // const controllerCopy = { ...controller };\r\n    // const { powerLevel } = controllerCopy;\r\n    // let newPowerLevel = powerLevel + adjustment;\r\n    // if (newPowerLevel < 1) {\r\n    //   newPowerLevel = 0;\r\n    // }\r\n    // if (newPowerLevel > 99) {\r\n    //   newPowerLevel = 100;\r\n    // }\r\n    // controllerCopy.powerLevel = newPowerLevel;\r\n    // // updateBrewControllerState\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-inline-flex flex-column p-2 border \">\r\n      <TemperatureDisplay temperature={controller.temperature} units={units} />\r\n      <PowerLevelComponent\r\n        powerLevel={controller.powerLevel}\r\n        adjustPowerLevel={adjustPowerLevel}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
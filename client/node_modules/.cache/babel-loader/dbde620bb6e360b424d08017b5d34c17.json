{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cblis\\\\OneDrive\\\\Documents\\\\Projects\\\\SBFE4\\\\client\\\\src\\\\components\\\\configure\\\\ControllerModal.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialController = {\n  id: \"noid\",\n  name: \"New controller\",\n  sensorAddress: \"NA\",\n  heaterPin: -1,\n  description: \"\"\n};\nexport function ControllerModal(_ref) {\n  _s();\n\n  let {\n    controller,\n    socket,\n    show\n  } = _ref;\n  const [status, setStatus] = useState(\"new\");\n  const [saveController, setSaveController] = useState(initialController);\n  const [isOpen, setIsOpen] = useState(false);\n  useEffect(() => {\n    if (controller) {\n      setStatus(\"edit\");\n      setSaveController(controller);\n    } else {\n      setStatus(\"new\");\n      setSaveController({ ...initialController\n      });\n    }\n  }, []);\n  useEffect(() => {\n    console.log(\"setting modal open\");\n    setIsOpen(show);\n  }, [show]);\n\n  const handleSubmit = () => {\n    // process saveController\n    if (socket === undefined) {\n      console.error(\"Cannot emit save event: Socket not defined\");\n      return;\n    }\n\n    if (status === \"new\") {\n      const newController = {\n        name: saveController.name,\n        description: saveController.description,\n        heaterPin: saveController.heaterPin,\n        sensorAddress: saveController.sensorAddress\n      };\n      socket.emit(\"controller:add\", newController, res => {\n        console.log(res);\n      });\n    }\n  };\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex justify-content-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary m-2\",\n      \"data-bs-toggle\": \"modal\",\n      \"data-bs-target\": \"#exampleModal\",\n      children: \"Add New Controller\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: \"true\",\n      onHide: closeModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: status === \"edit\" ? \"Edit Controller\" : \"Add New Controller\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"add-edit-controller-form\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: saveController.name,\n              onChange: e => setSaveController({ ...saveController,\n                name: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: saveController.description,\n              onChange: e => setSaveController({ ...saveController,\n                description: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Sensor Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: saveController.sensorAddress,\n              onChange: e => setSaveController({ ...saveController,\n                sensorAddress: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Heater Pin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: saveController.heaterPin,\n              onChange: e => setSaveController({ ...saveController,\n                heaterPin: -1\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-secondary\",\n          \"data-bs-dismiss\": \"modal\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          form: \"add-edit-controller-form\",\n          className: \"btn btn-primary\",\n          children: \"Save changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ControllerModal, \"G2Yvzutdbtbkg61BsyQkGiIJCl8=\");\n\n_c = ControllerModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ControllerModal\");","map":{"version":3,"sources":["C:/Users/cblis/OneDrive/Documents/Projects/SBFE4/client/src/components/configure/ControllerModal.tsx"],"names":["useEffect","useState","Modal","initialController","id","name","sensorAddress","heaterPin","description","ControllerModal","controller","socket","show","status","setStatus","saveController","setSaveController","isOpen","setIsOpen","console","log","handleSubmit","undefined","error","newController","emit","res","closeModal","e","target","value"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Socket } from \"socket.io-client\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport {\r\n  ClientToServerEvents,\r\n  ServerToClientEvents,\r\n} from \"../../../../server/lib/events\";\r\nimport { BrewController } from \"../../../../server/lib/models/controllerModels\";\r\n\r\ninterface Props {\r\n  controller?: BrewController;\r\n  socket?: Socket<ServerToClientEvents, ClientToServerEvents>;\r\n  show: boolean;\r\n}\r\n\r\nconst initialController: BrewController = {\r\n  id: \"noid\",\r\n  name: \"New controller\",\r\n  sensorAddress: \"NA\",\r\n  heaterPin: -1,\r\n  description: \"\",\r\n};\r\n\r\nexport function ControllerModal({ controller, socket, show }: Props) {\r\n  const [status, setStatus] = useState<\"new\" | \"edit\">(\"new\");\r\n  const [saveController, setSaveController] =\r\n    useState<BrewController>(initialController);\r\n  const [isOpen, setIsOpen] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (controller) {\r\n      setStatus(\"edit\");\r\n      setSaveController(controller);\r\n    } else {\r\n      setStatus(\"new\");\r\n      setSaveController({ ...initialController });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"setting modal open\");\r\n    setIsOpen(show);\r\n  }, [show]);\r\n\r\n  const handleSubmit = () => {\r\n    // process saveController\r\n    if (socket === undefined) {\r\n      console.error(\"Cannot emit save event: Socket not defined\");\r\n      return;\r\n    }\r\n    if (status === \"new\") {\r\n      const newController: Omit<BrewController, \"id\"> = {\r\n        name: saveController.name,\r\n        description: saveController.description,\r\n        heaterPin: saveController.heaterPin,\r\n        sensorAddress: saveController.sensorAddress,\r\n      };\r\n      socket.emit(\"controller:add\", newController, (res) => {\r\n        console.log(res);\r\n      });\r\n    }\r\n  };\r\n\r\n  function closeModal() {\r\n    setIsOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-center\">\r\n      {/* <!-- Button trigger modal --> */}\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-primary m-2\"\r\n        data-bs-toggle=\"modal\"\r\n        data-bs-target=\"#exampleModal\"\r\n      >\r\n        Add New Controller\r\n      </button>\r\n\r\n      <Modal show=\"true\" onHide={closeModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            {status === \"edit\" ? \"Edit Controller\" : \"Add New Controller\"}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <form id=\"add-edit-controller-form\" onSubmit={handleSubmit}>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                value={saveController.name}\r\n                onChange={(e) =>\r\n                  setSaveController({\r\n                    ...saveController,\r\n                    name: e.target.value,\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Description</label>\r\n              <input\r\n                type=\"text\"\r\n                value={saveController.description}\r\n                onChange={(e) =>\r\n                  setSaveController({\r\n                    ...saveController,\r\n                    description: e.target.value,\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Sensor Address</label>\r\n              <input\r\n                type=\"text\"\r\n                value={saveController.sensorAddress}\r\n                onChange={(e) =>\r\n                  setSaveController({\r\n                    ...saveController,\r\n                    sensorAddress: e.target.value,\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Heater Pin</label>\r\n              <input\r\n                type=\"text\"\r\n                value={saveController.heaterPin}\r\n                onChange={(e) =>\r\n                  setSaveController({\r\n                    ...saveController,\r\n                    heaterPin: -1,\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n          </form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary\"\r\n            data-bs-dismiss=\"modal\"\r\n          >\r\n            Close\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            form=\"add-edit-controller-form\"\r\n            className=\"btn btn-primary\"\r\n          >\r\n            Save changes\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* <!-- Modal --> */}\r\n      {/* <div\r\n        className=\"modal fade\"\r\n        id=\"exampleModal\"\r\n        tabIndex={-1}\r\n        aria-labelledby=\"exampleModalLabel\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                {status === \"edit\" ? \"Edit Controller\" : \"Add New Controller\"}\r\n              </h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <form id=\"add-edit-controller-form\" onSubmit={handleSubmit}>\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={saveController.name}\r\n                    onChange={(e) =>\r\n                      setSaveController({\r\n                        ...saveController,\r\n                        name: e.target.value,\r\n                      })\r\n                    }\r\n                  />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Description</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={saveController.description}\r\n                    onChange={(e) =>\r\n                      setSaveController({\r\n                        ...saveController,\r\n                        description: e.target.value,\r\n                      })\r\n                    }\r\n                  />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Sensor Address</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={saveController.sensorAddress}\r\n                    onChange={(e) =>\r\n                      setSaveController({\r\n                        ...saveController,\r\n                        sensorAddress: e.target.value,\r\n                      })\r\n                    }\r\n                  />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Heater Pin</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={saveController.heaterPin}\r\n                    onChange={(e) =>\r\n                      setSaveController({\r\n                        ...saveController,\r\n                        heaterPin: -1,\r\n                      })\r\n                    }\r\n                  />\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                data-bs-dismiss=\"modal\"\r\n              >\r\n                Close\r\n              </button>\r\n              <button\r\n                type=\"submit\"\r\n                form=\"add-edit-controller-form\"\r\n                className=\"btn btn-primary\"\r\n              >\r\n                Save changes\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
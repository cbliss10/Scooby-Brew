{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cblis\\\\OneDrive\\\\Documents\\\\Projects\\\\SBFE4\\\\client\\\\src\\\\components\\\\brew\\\\BrewPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { BreweryPanels } from \"./BreweryPanels\";\nimport { useContext, useEffect, useState } from \"react\";\nimport Spinner from \"../common/Spinner\";\nimport { WebSocketContext } from \"../../context/websocketContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const BrewPage = () => {\n  _s();\n\n  const [brewControllerState, setBrewControllerState] = useState(undefined);\n  const {\n    socket\n  } = useContext(WebSocketContext);\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    console.log(\"State set\"); // if (socket !== undefined) {\n    //   socket.on(\"brew:update\", (res) => {\n    //     setBrewControllerState(res);\n    //   });\n    //   console.log(\"Starting brew ...\");\n    //   socket.emit(\"brew:start\");\n    // }\n  }, [socket]);\n  useEffect(() => {\n    console.log(\"brewControllerState set\"); // if (!isLoaded && brewControllerState !== undefined) {\n    //   setIsLoaded(true);\n    // }\n  }, [brewControllerState]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Brew!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center\",\n      children: isLoaded && brewControllerState !== undefined ? /*#__PURE__*/_jsxDEV(BreweryPanels, {\n        brewControllerState: brewControllerState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Loading ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(BrewPage, \"fX59hNKe/Cfq4MGDpF4hVWXgFHM=\");\n\n_c = BrewPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BrewPage\");","map":{"version":3,"sources":["C:/Users/cblis/OneDrive/Documents/Projects/SBFE4/client/src/components/brew/BrewPage.tsx"],"names":["BreweryPanels","useContext","useEffect","useState","Spinner","WebSocketContext","BrewPage","brewControllerState","setBrewControllerState","undefined","socket","isLoaded","setIsLoaded","console","log"],"mappings":";;;AAAA,SAASA,aAAT,QAA8B,iBAA9B;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,SAASC,gBAAT,QAAiC,gCAAjC;;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDL,QAAQ,CAE5DM,SAF4D,CAA9D;AAGA,QAAM;AAAEC,IAAAA;AAAF,MAAaT,UAAU,CAACI,gBAAD,CAA7B;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAU,KAAV,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EADc,CAEd;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GATQ,EASN,CAACJ,MAAD,CATM,CAAT;AAWAR,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EADc,CAEd;AACA;AACA;AACD,GALQ,EAKN,CAACP,mBAAD,CALM,CAAT;AAOA,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA,gBACGI,QAAQ,IAAIJ,mBAAmB,KAAKE,SAApC,gBACC,QAAC,aAAD;AAAe,QAAA,mBAAmB,EAAEF;AAApC;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC;AAAA,gCACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAgBD,CAzCM;;GAAMD,Q;;KAAAA,Q","sourcesContent":["import { BreweryPanels } from \"./BreweryPanels\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport Spinner from \"../common/Spinner\";\r\nimport { BrewControllerState } from \"../../../../server/lib/models/controllerModels\";\r\nimport { WebSocketContext } from \"../../context/websocketContext\";\r\n\r\nexport const BrewPage = () => {\r\n  const [brewControllerState, setBrewControllerState] = useState<\r\n    BrewControllerState[] | undefined\r\n  >(undefined);\r\n  const { socket } = useContext(WebSocketContext);\r\n  const [isLoaded, setIsLoaded] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    console.log(\"State set\");\r\n    // if (socket !== undefined) {\r\n    //   socket.on(\"brew:update\", (res) => {\r\n    //     setBrewControllerState(res);\r\n    //   });\r\n    //   console.log(\"Starting brew ...\");\r\n    //   socket.emit(\"brew:start\");\r\n    // }\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"brewControllerState set\");\r\n    // if (!isLoaded && brewControllerState !== undefined) {\r\n    //   setIsLoaded(true);\r\n    // }\r\n  }, [brewControllerState]);\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"text-center\">Brew!</h1>\r\n      {/* <BrewerySwitchBar breweryStatus={brewerySettings.status} /> */}\r\n      <div className=\"d-flex justify-content-center\">\r\n        {isLoaded && brewControllerState !== undefined ? (\r\n          <BreweryPanels brewControllerState={brewControllerState} />\r\n        ) : (\r\n          <div>\r\n            <Spinner />\r\n            <h2>Loading ...</h2>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
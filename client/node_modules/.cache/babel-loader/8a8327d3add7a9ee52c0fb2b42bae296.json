{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cblis\\\\OneDrive\\\\Documents\\\\Projects\\\\SBFE4\\\\client\\\\src\\\\components\\\\configure\\\\ControllerModal.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { WebSocketContext } from \"../../context/websocketContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialController = {\n  id: \"noid\",\n  name: \"New controller\",\n  sensorAddress: \"NA\",\n  heaterPin: -1,\n  description: \"\"\n};\nexport function ControllerModal(_ref) {\n  _s();\n\n  let {\n    controller,\n    show,\n    isNew,\n    onSubmit,\n    closeModal\n  } = _ref;\n  const {\n    socket,\n    status\n  } = useContext(WebSocketContext);\n  const [saveController, setSaveController] = useState(initialController);\n  const [sensorAddresses, setSensorAddresses] = useState([]);\n  useEffect(() => {\n    getSensors();\n\n    if (isNew) {\n      setSaveController(initialController);\n    } else {\n      if (controller === undefined) {\n        throw Error(\"Controller is not defined\");\n      }\n\n      setSaveController(controller);\n    }\n  }, [controller]);\n\n  function getSensors() {\n    if (socket !== undefined && status === \"Connected\") {\n      console.log(\"trying to get sensors\");\n      socket.emit(\"sensor:getAll\", res => {\n        if (\"error\" in res) {\n          console.log(res.error);\n        } else {\n          console.log(\"sensor list returned: \" + res.data);\n          setSensorAddresses(res.data);\n        }\n      });\n    }\n  }\n\n  function sensorAddressOptions() {\n    console.log(\"populating sensor addresses, count of \" + sensorAddresses.length);\n    return sensorAddresses.map(address => {\n      /*#__PURE__*/\n      _jsxDEV(\"option\", {\n        value: address,\n        children: address\n      }, address, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex justify-content-center\",\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: closeModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: isNew ? \"Add Controller\" : \"Edit Controller\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"add-edit-controller-form\",\n          onSubmit: () => onSubmit(saveController, isNew),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: saveController.name,\n              onChange: e => setSaveController({ ...saveController,\n                name: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: saveController.description,\n              onChange: e => setSaveController({ ...saveController,\n                description: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Sensor Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: saveController.sensorAddress,\n              onChange: e => setSaveController({ ...saveController,\n                sensorAddress: e.target.value\n              }),\n              children: sensorAddressOptions()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Heater Pin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: saveController.heaterPin,\n              onChange: e => setSaveController({ ...saveController,\n                heaterPin: -1\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: closeModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          form: \"add-edit-controller-form\",\n          className: \"btn btn-primary\",\n          children: \"Save changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ControllerModal, \"fhBG0205DBEwR3Gy1bt3TRbcFmc=\");\n\n_c = ControllerModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ControllerModal\");","map":{"version":3,"sources":["C:/Users/cblis/OneDrive/Documents/Projects/SBFE4/client/src/components/configure/ControllerModal.tsx"],"names":["useContext","useEffect","useState","Modal","Button","WebSocketContext","initialController","id","name","sensorAddress","heaterPin","description","ControllerModal","controller","show","isNew","onSubmit","closeModal","socket","status","saveController","setSaveController","sensorAddresses","setSensorAddresses","getSensors","undefined","Error","console","log","emit","res","error","data","sensorAddressOptions","length","map","address","e","target","value"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { BrewController } from \"../../../../server/lib/models/controllerModels\";\r\nimport { WebSocketContext } from \"../../context/websocketContext\";\r\n\r\ninterface Props {\r\n  controller: BrewController | undefined;\r\n  show: boolean;\r\n  isNew: boolean;\r\n  onSubmit: (\r\n    controller: BrewController | Omit<BrewController, \"id\">,\r\n    isNew: boolean\r\n  ) => void;\r\n  closeModal: () => void;\r\n}\r\n\r\nconst initialController: BrewController = {\r\n  id: \"noid\",\r\n  name: \"New controller\",\r\n  sensorAddress: \"NA\",\r\n  heaterPin: -1,\r\n  description: \"\",\r\n};\r\n\r\nexport function ControllerModal({\r\n  controller,\r\n  show,\r\n  isNew,\r\n  onSubmit,\r\n  closeModal,\r\n}: Props) {\r\n  const { socket, status } = useContext(WebSocketContext);\r\n  const [saveController, setSaveController] =\r\n    useState<BrewController>(initialController);\r\n  const [sensorAddresses, setSensorAddresses] = useState<string[]>([]);\r\n\r\n  useEffect(() => {\r\n    getSensors();\r\n    if (isNew) {\r\n      setSaveController(initialController);\r\n    } else {\r\n      if (controller === undefined) {\r\n        throw Error(\"Controller is not defined\");\r\n      }\r\n      setSaveController(controller);\r\n    }\r\n  }, [controller]);\r\n\r\n  function getSensors() {\r\n    if (socket !== undefined && status === \"Connected\") {\r\n      console.log(\"trying to get sensors\");\r\n      socket.emit(\"sensor:getAll\", (res) => {\r\n        if (\"error\" in res) {\r\n          console.log(res.error);\r\n        } else {\r\n          console.log(\"sensor list returned: \" + res.data);\r\n          setSensorAddresses(res.data);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  function sensorAddressOptions() {\r\n    console.log(\r\n      \"populating sensor addresses, count of \" + sensorAddresses.length\r\n    );\r\n    return sensorAddresses.map((address) => {\r\n      <option key={address} value={address}>\r\n        {address}\r\n      </option>;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-center\">\r\n      <Modal show={show} onHide={closeModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            {isNew ? \"Add Controller\" : \"Edit Controller\"}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <form\r\n            id=\"add-edit-controller-form\"\r\n            onSubmit={() => onSubmit(saveController, isNew)}\r\n          >\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                value={saveController.name}\r\n                onChange={(e) =>\r\n                  setSaveController({\r\n                    ...saveController,\r\n                    name: e.target.value,\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Description</label>\r\n              <input\r\n                type=\"text\"\r\n                value={saveController.description}\r\n                onChange={(e) =>\r\n                  setSaveController({\r\n                    ...saveController,\r\n                    description: e.target.value,\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Sensor Address</label>\r\n              <select\r\n                value={saveController.sensorAddress}\r\n                onChange={(e) =>\r\n                  setSaveController({\r\n                    ...saveController,\r\n                    sensorAddress: e.target.value,\r\n                  })\r\n                }\r\n              >\r\n                {sensorAddressOptions()}\r\n              </select>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Heater Pin</label>\r\n              <input\r\n                type=\"text\"\r\n                value={saveController.heaterPin}\r\n                onChange={(e) =>\r\n                  setSaveController({\r\n                    ...saveController,\r\n                    heaterPin: -1,\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n          </form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={closeModal}>\r\n            Close\r\n          </Button>\r\n          <button\r\n            type=\"submit\"\r\n            form=\"add-edit-controller-form\"\r\n            className=\"btn btn-primary\"\r\n          >\r\n            Save changes\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
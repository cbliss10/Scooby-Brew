{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport apiStatusSlice from \"./reducers/apiStatusSlice\";\nimport brewControllerSlice from \"./reducers/controllersSlice\";\nimport settingsSlice from \"./reducers/settingsSlice\";\nimport websocketSlice from \"./reducers/websocketSlice\";\nexport const store = configureStore({\n  reducer: {\n    settingsSlice: settingsSlice,\n    brewControllerSlice,\n    apiStatus: apiStatusSlice,\n    websocketStatus: websocketSlice\n  }\n}); // Infer the `RootState` and `AppDispatch` types from the store itself","map":{"version":3,"sources":["C:/Users/cblis/OneDrive/Documents/Projects/SBFE4/client/src/redux/store.ts"],"names":["configureStore","apiStatusSlice","brewControllerSlice","settingsSlice","websocketSlice","store","reducer","apiStatus","websocketStatus"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,mBAAP,MAAgC,6BAAhC;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AAEA,OAAO,MAAMC,KAAK,GAAGL,cAAc,CAAC;AAClCM,EAAAA,OAAO,EAAE;AACPH,IAAAA,aAAa,EAAEA,aADR;AAEPD,IAAAA,mBAFO;AAGPK,IAAAA,SAAS,EAAEN,cAHJ;AAIPO,IAAAA,eAAe,EAAEJ;AAJV;AADyB,CAAD,CAA5B,C,CASP","sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport apiStatusSlice from \"./reducers/apiStatusSlice\";\r\nimport brewControllerSlice from \"./reducers/controllersSlice\";\r\nimport settingsSlice from \"./reducers/settingsSlice\";\r\nimport websocketSlice from \"./reducers/websocketSlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    settingsSlice: settingsSlice,\r\n    brewControllerSlice,\r\n    apiStatus: apiStatusSlice,\r\n    websocketStatus: websocketSlice,\r\n  },\r\n});\r\n\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\r\nexport type AppDispatch = typeof store.dispatch;\r\n"]},"metadata":{},"sourceType":"module"}
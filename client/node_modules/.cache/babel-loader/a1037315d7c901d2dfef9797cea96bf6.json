{"ast":null,"code":"import { beginApiCall, apiCallError, apiCallSuccess } from \"../reducers/apiStatusSlice\";\nimport { updateController } from \"../reducers/controllersSlice\";\n// export function createBrewComponent(\n//   brewComponent: BrewingComponent\n// ): BrewingComponentAction {\n//   return { type: \"CREATE_BREW_COMPONENT\", component: brewComponent };\n// }\nexport function loadBrewControllers() {\n  console.log(\"loadBrewControllers\");\n  return function (dispatch) {\n    console.log(\"preparing to fetch ...\");\n    dispatch(beginApiCall()); // brewControllerApi\n    //   .getBrewControllers()\n    //   .then((data) => {\n    //     dispatch(loadData(data));\n    //     dispatch(apiCallSuccess());\n    //   })\n    //   .catch((error) => {\n    //     dispatch(apiCallError);\n    //     console.log(error);\n    //   });\n  };\n}\nexport function updateBrewController(controller) {\n  console.log(\"updateBrewController\");\n  return function (dispatch) {\n    console.log(\"preparing to fetch ...\");\n    dispatch(beginApiCall());\n    fetch(\"http://localhost:3001/brewControllers/\" + controller.name, {\n      method: \"PUT\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(controller)\n    }).then(res => res.json()).then(data => {\n      dispatch(updateController(data));\n      dispatch(apiCallSuccess());\n    }).catch(error => {\n      dispatch(apiCallError);\n      console.log(error);\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/cblis/OneDrive/Documents/Projects/SBFE4/client/src/redux/actions/brewComponentActions.ts"],"names":["beginApiCall","apiCallError","apiCallSuccess","updateController","loadBrewControllers","console","log","dispatch","updateBrewController","controller","fetch","name","method","headers","body","JSON","stringify","then","res","json","data","catch","error"],"mappings":"AAIA,SACEA,YADF,EAEEC,YAFF,EAGEC,cAHF,QAIO,4BAJP;AAKA,SAAmBC,gBAAnB,QAA2C,8BAA3C;AAQA;AACA;AACA;AACA;AACA;AAEA,OAAO,SAASC,mBAAT,GAKL;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,SAAO,UAAUC,QAAV,EAAoB;AACzBF,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAC,IAAAA,QAAQ,CAACP,YAAY,EAAb,CAAR,CAFyB,CAGzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAbD;AAcD;AAED,OAAO,SAASQ,oBAAT,CACLC,UADK,EAE6C;AAClDJ,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,SAAO,UAAUC,QAAV,EAAoB;AACzBF,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAC,IAAAA,QAAQ,CAACP,YAAY,EAAb,CAAR;AACAU,IAAAA,KAAK,CAAC,2CAA2CD,UAAU,CAACE,IAAvD,EAA6D;AAChEC,MAAAA,MAAM,EAAE,KADwD;AAEhEC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFuD;AAGhEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,UAAf;AAH0D,KAA7D,CAAL,CAKGQ,IALH,CAKSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EALjB,EAMGF,IANH,CAMSG,IAAD,IAAU;AACdb,MAAAA,QAAQ,CAACJ,gBAAgB,CAACiB,IAAD,CAAjB,CAAR;AACAb,MAAAA,QAAQ,CAACL,cAAc,EAAf,CAAR;AACD,KATH,EAUGmB,KAVH,CAUUC,KAAD,IAAW;AAChBf,MAAAA,QAAQ,CAACN,YAAD,CAAR;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYgB,KAAZ;AACD,KAbH;AAcD,GAjBD;AAkBD","sourcesContent":["import { Action, AnyAction } from \"redux\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport * as brewControllerApi from \"../../api/brewControllerApi\";\r\nimport { BrewController } from \"../../models/controller.model\";\r\nimport {\r\n  beginApiCall,\r\n  apiCallError,\r\n  apiCallSuccess,\r\n} from \"../reducers/apiStatusSlice\";\r\nimport { loadData, updateController } from \"../reducers/controllersSlice\";\r\nimport { RootState } from \"../store\";\r\n\r\nexport interface BrewingComponentAction extends Action {\r\n  type: string;\r\n  components: BrewController[];\r\n}\r\n\r\n// export function createBrewComponent(\r\n//   brewComponent: BrewingComponent\r\n// ): BrewingComponentAction {\r\n//   return { type: \"CREATE_BREW_COMPONENT\", component: brewComponent };\r\n// }\r\n\r\nexport function loadBrewControllers(): ThunkAction<\r\n  void,\r\n  RootState,\r\n  unknown,\r\n  AnyAction\r\n> {\r\n  console.log(\"loadBrewControllers\");\r\n  return function (dispatch) {\r\n    console.log(\"preparing to fetch ...\");\r\n    dispatch(beginApiCall());\r\n    // brewControllerApi\r\n    //   .getBrewControllers()\r\n    //   .then((data) => {\r\n    //     dispatch(loadData(data));\r\n    //     dispatch(apiCallSuccess());\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     dispatch(apiCallError);\r\n    //     console.log(error);\r\n    //   });\r\n  };\r\n}\r\n\r\nexport function updateBrewController(\r\n  controller: BrewController\r\n): ThunkAction<void, RootState, unknown, AnyAction> {\r\n  console.log(\"updateBrewController\");\r\n  return function (dispatch) {\r\n    console.log(\"preparing to fetch ...\");\r\n    dispatch(beginApiCall());\r\n    fetch(\"http://localhost:3001/brewControllers/\" + controller.name, {\r\n      method: \"PUT\",\r\n      headers: { \"content-type\": \"application/json\" },\r\n      body: JSON.stringify(controller),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        dispatch(updateController(data));\r\n        dispatch(apiCallSuccess());\r\n      })\r\n      .catch((error) => {\r\n        dispatch(apiCallError);\r\n        console.log(error);\r\n      });\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
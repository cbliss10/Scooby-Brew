{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cblis\\\\OneDrive\\\\Documents\\\\Projects\\\\SBFE4\\\\client\\\\src\\\\components\\\\configure\\\\ConfigPage.tsx\",\n    _s = $RefreshSig$();\n\n// import { stat } from \"fs\";\nimport { useContext, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { WebsocketContext } from \"../../context/WebsocketContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// import Spinner from \"../common/Spinner\";\nconst ConfigPage = function (props) {\n  _s();\n\n  // const [state, setState] = useState(initialState);\n  const [brewControllers, setBrewControllers] = useState();\n  const websocketContext = useContext(WebsocketContext); // const dispatch = useAppDispatch();\n  // const components = props.brewComponents;\n  // const handleChange = (event: FormEvent<HTMLInputElement>) => {\n  //   const component = {\n  //     ...state.component,\n  //     componentName: event.currentTarget.value,\n  //   };\n  //   setState({ component });\n  // };\n  // const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n  //   event.preventDefault();\n  //   dispatch(add(state.component));\n  //   alert(state.component.componentName);\n  // }\n\n  const RenderedComponents = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: brewControllers ? brewControllers.map(controller => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Name: \", controller.name]\n    }, controller.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"No controllers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n\n  function handleClick() {\n    websocketContext.methods[1]();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"This is the config page.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RenderedComponents, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ConfigPage, \"tNfUzRbkOC2qWcSC2Osg1roRVIQ=\");\n\n_c = ConfigPage;\n\nconst mapState = state => ({\n  brewControllers: state.brewControllerSlice.brewControllers\n});\n\nconst connector = connect(mapState);\nexport default _c2 = connector(ConfigPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ConfigPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/cblis/OneDrive/Documents/Projects/SBFE4/client/src/components/configure/ConfigPage.tsx"],"names":["useContext","useState","connect","WebsocketContext","ConfigPage","props","brewControllers","setBrewControllers","websocketContext","RenderedComponents","map","controller","name","handleClick","methods","mapState","state","brewControllerSlice","connector"],"mappings":";;;AAAA;AACA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAASC,OAAT,QAAwC,aAAxC;AACA,SAASC,gBAAT,QAAoD,gCAApD;;;AAGA;AAEA,MAAMC,UAAU,GAAG,UAAUC,KAAV,EAAwB;AAAA;;AACzC;AAEA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCN,QAAQ,EAAtD;AAEA,QAAMO,gBAAgB,GAAGR,UAAU,CAAoBG,gBAApB,CAAnC,CALyC,CAOzC;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAMM,kBAAkB,GAAG,mBACzB;AAAA,cACGH,eAAe,GAAGA,eAAe,CAACI,GAAhB,CAAqBC,UAAD,iBACrC;AAAA,2BAAkCA,UAAU,CAACC,IAA7C;AAAA,OAAUD,UAAU,CAACC,IAArB;AAAA;AAAA;AAAA;AAAA,YADiB,CAAH,gBAEX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHP;AAAA;AAAA;AAAA;AAAA,UADF;;AAQA,WAASC,WAAT,GAAuB;AACrBL,IAAAA,gBAAgB,CAACM,OAAjB,CAAyB,CAAzB;AACD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAED,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CApDD;;GAAMT,U;;KAAAA,U;;AAsDN,MAAMW,QAAQ,GAAIC,KAAD,KAAuB;AACtCV,EAAAA,eAAe,EAAEU,KAAK,CAACC,mBAAN,CAA0BX;AADL,CAAvB,CAAjB;;AAIA,MAAMY,SAAS,GAAGhB,OAAO,CAACa,QAAD,CAAzB;AAQA,qBAAeG,SAAS,CAACd,UAAD,CAAxB","sourcesContent":["// import { stat } from \"fs\";\r\nimport { useContext, useState } from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { WebsocketContext, IWebsocketContext } from \"../../context/WebsocketContext\";\r\nimport { BrewController } from \"../../models/controller.model\";\r\nimport { RootState } from \"../../redux/store\";\r\n// import Spinner from \"../common/Spinner\";\r\n\r\nconst ConfigPage = function (props: Props) {\r\n  // const [state, setState] = useState(initialState);\r\n\r\n  const [brewControllers, setBrewControllers] = useState<BrewController[]>();\r\n\r\n  const websocketContext = useContext<IWebsocketContext>(WebsocketContext);\r\n\r\n  // const dispatch = useAppDispatch();\r\n\r\n  // const components = props.brewComponents;\r\n\r\n  // const handleChange = (event: FormEvent<HTMLInputElement>) => {\r\n  //   const component = {\r\n  //     ...state.component,\r\n  //     componentName: event.currentTarget.value,\r\n  //   };\r\n  //   setState({ component });\r\n  // };\r\n\r\n  // const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\r\n  //   event.preventDefault();\r\n  //   dispatch(add(state.component));\r\n  //   alert(state.component.componentName);\r\n  // }\r\n\r\n  const RenderedComponents = () => (\r\n    <div>\r\n      {brewControllers ? brewControllers.map((controller) => (\r\n        <div key={controller.name}>Name: {controller.name}</div>\r\n      )) : <h3>No controllers</h3>}\r\n    </div>\r\n  );\r\n\r\n  function handleClick() {\r\n    websocketContext.methods[1]();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>This is the config page.</div>\r\n      <button onClick={handleClick}>Test</button>\r\n      <RenderedComponents />\r\n      {/* <form>\r\n        <input\r\n          type=\"text\"\r\n          onChange={handleChange}\r\n          value={state.component.componentName}\r\n        />\r\n        <input type=\"submit\" value=\"Save\" />\r\n      </form> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapState = (state: RootState) => ({\r\n  brewControllers: state.brewControllerSlice.brewControllers,\r\n});\r\n\r\nconst connector = connect(mapState);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ninterface Props extends PropsFromRedux {\r\n  // myToogle: boolean\r\n}\r\n\r\nexport default connector(ConfigPage);\r\n"]},"metadata":{},"sourceType":"module"}
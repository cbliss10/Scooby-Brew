{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cblis\\\\OneDrive\\\\Documents\\\\Projects\\\\SBFE4\\\\client\\\\src\\\\components\\\\configure\\\\ConfigPage.tsx\",\n    _s = $RefreshSig$();\n\n// import { stat } from \"fs\";\nimport { useEffect, useState } from \"react\";\n// import Spinner from \"../common/Spinner\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = \"http://localhost:3001\";\nexport const ConfigPage = function () {\n  _s();\n\n  const [socket, setSocket] = useState();\n  const [brewControllers, setBrewControllers] = useState();\n  useEffect(() => {\n    console.log(\"setSocket useEffect\");\n    const newSocket = io(ENDPOINT);\n    setSocket(newSocket);\n  }, [setSocket]);\n  useEffect(() => {\n    console.log(\"socket useEffect = \" + socket);\n\n    if (socket !== undefined) {\n      socket.emit(\"controller:list\", res => {\n        console.log(res);\n      });\n    }\n  }, [socket]);\n\n  const RenderedComponents = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: brewControllers ? brewControllers.map(controller => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Name: \", controller.name]\n    }, controller.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"No controllers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n\n  function handleClick() {//\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"This is the config page.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RenderedComponents, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ConfigPage, \"otCwNeTwdHZqkydGNCc1nqyZImI=\");\n\n_c = ConfigPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfigPage\");","map":{"version":3,"sources":["C:/Users/cblis/OneDrive/Documents/Projects/SBFE4/client/src/components/configure/ConfigPage.tsx"],"names":["useEffect","useState","io","ENDPOINT","ConfigPage","socket","setSocket","brewControllers","setBrewControllers","console","log","newSocket","undefined","emit","res","RenderedComponents","map","controller","name","handleClick"],"mappings":";;;AAAA;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAIA;AACA,SAASC,EAAT,QAA2B,kBAA3B;;AAKA,MAAMC,QAAQ,GAAG,uBAAjB;AAEA,OAAO,MAAMC,UAAU,GAAG,YAAY;AAAA;;AACpC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,EAApC;AAIA,QAAM,CAACM,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,EAAtD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,UAAMC,SAA6D,GACjET,EAAE,CAACC,QAAD,CADJ;AAEAG,IAAAA,SAAS,CAACK,SAAD,CAAT;AACD,GALQ,EAKN,CAACL,SAAD,CALM,CAAT;AAOAN,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwBL,MAApC;;AACA,QAAIA,MAAM,KAAKO,SAAf,EAA0B;AACxBP,MAAAA,MAAM,CAACQ,IAAP,CAAY,iBAAZ,EAAgCC,GAAD,IAAS;AACtCL,QAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACD,OAFD;AAGD;AACF,GAPQ,EAON,CAACT,MAAD,CAPM,CAAT;;AASA,QAAMU,kBAAkB,GAAG,mBACzB;AAAA,cACGR,eAAe,GACdA,eAAe,CAACS,GAAhB,CAAqBC,UAAD,iBAClB;AAAA,2BAAkCA,UAAU,CAACC,IAA7C;AAAA,OAAUD,UAAU,CAACC,IAArB;AAAA;AAAA;AAAA;AAAA,YADF,CADc,gBAKd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,UADF;;AAYA,WAASC,WAAT,GAAuB,CACrB;AACD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEA,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAtDM;;GAAMf,U;;KAAAA,U","sourcesContent":["// import { stat } from \"fs\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { BrewController } from \"../../models/controller.model\";\r\nimport { RootState } from \"../../redux/store\";\r\n// import Spinner from \"../common/Spinner\";\r\nimport { io, Socket } from \"socket.io-client\";\r\nimport {\r\n  ClientToServerEvents,\r\n  ServerToClientEvents,\r\n} from \"../../../../server/lib/events\";\r\nconst ENDPOINT = \"http://localhost:3001\";\r\n\r\nexport const ConfigPage = function () {\r\n  const [socket, setSocket] = useState<\r\n    Socket<ServerToClientEvents, ClientToServerEvents> | undefined\r\n  >();\r\n\r\n  const [brewControllers, setBrewControllers] = useState<BrewController[]>();\r\n\r\n  useEffect(() => {\r\n    console.log(\"setSocket useEffect\");\r\n    const newSocket: Socket<ServerToClientEvents, ClientToServerEvents> =\r\n      io(ENDPOINT);\r\n    setSocket(newSocket);\r\n  }, [setSocket]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"socket useEffect = \" + socket);\r\n    if (socket !== undefined) {\r\n      socket.emit(\"controller:list\", (res) => {\r\n        console.log(res);\r\n      });\r\n    }\r\n  }, [socket]);\r\n\r\n  const RenderedComponents = () => (\r\n    <div>\r\n      {brewControllers ? (\r\n        brewControllers.map((controller) => (\r\n          <div key={controller.name}>Name: {controller.name}</div>\r\n        ))\r\n      ) : (\r\n        <h3>No controllers</h3>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  function handleClick() {\r\n    //\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>This is the config page.</div>\r\n      <button onClick={handleClick}>Test</button>\r\n      <RenderedComponents />\r\n      {/* <form>\r\n        <input\r\n          type=\"text\"\r\n          onChange={handleChange}\r\n          value={state.component.componentName}\r\n        />\r\n        <input type=\"submit\" value=\"Save\" />\r\n      </form> */}\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
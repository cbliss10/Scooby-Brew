{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cblis\\\\OneDrive\\\\Documents\\\\Projects\\\\SBFE4\\\\client\\\\src\\\\components\\\\brew\\\\BreweryPanels.tsx\";\nimport BrewPanel from \"./BrewPanel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function BreweryPanels(props) {\n  const {\n    socket,\n    brewControllerState\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: brewControllerState.map(controller => {\n      return /*#__PURE__*/_jsxDEV(BrewPanel, {\n        controller: controller,\n        socket: socket\n      }, controller.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_c = BreweryPanels;\n\nvar _c;\n\n$RefreshReg$(_c, \"BreweryPanels\");","map":{"version":3,"sources":["C:/Users/cblis/OneDrive/Documents/Projects/SBFE4/client/src/components/brew/BreweryPanels.tsx"],"names":["BrewPanel","BreweryPanels","props","socket","brewControllerState","map","controller","name"],"mappings":";AAMA,OAAOA,SAAP,MAAsB,aAAtB;;AAOA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAAiD;AACtD,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAkCF,KAAxC;AAEA,sBACE;AAAA,cACGE,mBAAmB,CAACC,GAApB,CAAyBC,UAAD,IAAgB;AACvC,0BACE,QAAC,SAAD;AAEE,QAAA,UAAU,EAAEA,UAFd;AAGE,QAAA,MAAM,EAAEH;AAHV,SACOG,UAAU,CAACC,IADlB;AAAA;AAAA;AAAA;AAAA,cADF;AAOD,KARA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;KAhBeN,a","sourcesContent":["import { Socket } from \"socket.io-client\";\r\nimport { BrewControllerState } from \"../../../../server/lib/models/controllerModels\";\r\nimport {\r\n  ClientToServerEvents,\r\n  ServerToClientEvents,\r\n} from \"../../../../server/lib/events\";\r\nimport BrewPanel from \"./BrewPanel\";\r\n\r\ninterface BreweryPanelProps {\r\n  brewControllerState: BrewControllerState[];\r\n  socket: Socket<ServerToClientEvents, ClientToServerEvents> | undefined;\r\n}\r\n\r\nexport function BreweryPanels(props: BreweryPanelProps) {\r\n  const { socket, brewControllerState } = props;\r\n\r\n  return (\r\n    <div>\r\n      {brewControllerState.map((controller) => {\r\n        return (\r\n          <BrewPanel\r\n            key={controller.name}\r\n            controller={controller}\r\n            socket={socket}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}